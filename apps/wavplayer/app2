if (Pip.removeSubmenu) Pip.removeSubmenu();
delete Pip.removeSubmenu;
if (Pip.remove) Pip.remove();
delete Pip.remove;

// Graphics setup
let G = Graphics.createArrayBuffer(400,308,2,{
  msb : true,
  buffer : E.toArrayBuffer(E.memoryArea(0x10000000 + 16384, (400*308)>>2))
});
G.flip = () => Pip.blitImage(G,40,7);

// Get all storage files and display for debug
let allFiles = require("Storage").list();
let wavFiles = allFiles.filter(f =>
  f.toLowerCase().endsWith(".wav") &&
  (f.startsWith("ALARM") || f.startsWith("/ALARM"))
);
let selected = 0;

const LEFT_MARGIN = 60;
const TOP_MARGIN = 32;
const LINE_HEIGHT = 36;
const DEBUG_LINES = 4; // Show up to 4 debug lines at top

function drawMenu() {
  G.clear(1).setFontMonofonto18(); // Smaller font for debug
  // Debug section: show file names
  let y = 8;
  G.setColor(1);
  G.drawString("DEBUG: Storage.list()", LEFT_MARGIN, y);
  y += 18;
  allFiles.slice(0,DEBUG_LINES).forEach((file, idx) => {
    G.drawString((idx+1)+": "+file, LEFT_MARGIN, y);
    y += 18;
  });
  G.setColor(0);

  G.setFontMonofonto28();
  y = TOP_MARGIN + DEBUG_LINES * 18;
  if (!wavFiles.length) {
    G.drawString("No WAV files found", LEFT_MARGIN, y).flip();
    return;
  }
  wavFiles.forEach((name, i) => {
    let rowY = y + i * LINE_HEIGHT;
    if (i === selected) {
      G.setColor(2).fillRect(LEFT_MARGIN - 4, rowY - 2, G.getWidth() - 10, rowY + 30);
      G.setColor(0);
    }
    G.drawString(name.replace(/^\/?ALARM\//,""), LEFT_MARGIN, rowY);
  });
  G.flip();
}

function onKnob(dir) {
  if (!wavFiles.length) return;
  selected = Math.max(0, Math.min(wavFiles.length-1, selected + dir));
  drawMenu();
}
Pip.on("knob1", onKnob);

function playSelected() {
  if (!wavFiles.length) return;
  let file = wavFiles[selected];
  let wavData = require("Storage").read(file);
  if (!wavData) return;
  Pip.audioStartVar(wavData);
}

function onButton() {
  playSelected();
}
Pip.on("knob1btn", onButton);

Pip.remove = function() {
  Pip.removeListener("knob1", onKnob);
  Pip.removeListener("knob1btn", onButton);
};

drawMenu();